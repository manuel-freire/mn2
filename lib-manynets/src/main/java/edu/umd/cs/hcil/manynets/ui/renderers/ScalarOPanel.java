/*
 *  This file is part of ManyNets.
 *
 *  ManyNets is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as 
 *  published by the Free Software Foundation, either version 3 of the 
 *  License, or (at your option) any later version.
 *
 *  ManyNets is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with ManyNets.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  ManyNets was created at the Human Computer Interaction Lab, 
 *  University of Maryland at College Park. See the README file for details
 */

package edu.umd.cs.hcil.manynets.ui.renderers;

import edu.umd.cs.hcil.manynets.ui.ColumnManager.AbstractRendererOPanel;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import javax.swing.ImageIcon;
import javax.swing.JColorChooser;

/**
 *
 * @author Manuel Freire
 */
public class ScalarOPanel extends AbstractRendererOPanel {
    ScalarRenderer renderer;

    /** Creates new form ScalarOPanel */
    public ScalarOPanel(ScalarRenderer renderer) {
        initComponents();
        this.renderer = renderer;

        setButtonColor(renderer.getBarColor());
    }

    public void setButtonColor(Color c) {
        BufferedImage bi = new BufferedImage(32, 16, BufferedImage.TYPE_INT_RGB);
        Graphics g = bi.getGraphics();
        g.setColor(c);
        g.fillRect(0, 0, 32, 16);
        jbChooseColor.setIcon(new ImageIcon(bi));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jcbShowBar = new javax.swing.JCheckBox();
        jcbShowValue = new javax.swing.JCheckBox();
        jbChooseColor = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jcbShowBar.setSelected(true);
        jcbShowBar.setText("Show bar");
        jcbShowBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbShowBarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 0, 0);
        add(jcbShowBar, gridBagConstraints);

        jcbShowValue.setSelected(true);
        jcbShowValue.setText("Show value");
        jcbShowValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbShowValueActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 4, 0);
        add(jcbShowValue, gridBagConstraints);

        jbChooseColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbChooseColorActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 4);
        add(jbChooseColor, gridBagConstraints);
    }

    private void jcbShowValueActionPerformed(java.awt.event.ActionEvent evt) {
        renderer.setShowValue(jcbShowValue.isSelected());
        jbChooseColor.setEnabled(jcbShowValue.isSelected());
        fireOptionsChanged();
    }

    private void jcbShowBarActionPerformed(java.awt.event.ActionEvent evt) {
        renderer.setShowBar(jcbShowBar.isSelected());
        fireOptionsChanged();
    }

    private void jbChooseColorActionPerformed(java.awt.event.ActionEvent evt) {
        renderer.setBarColor(JColorChooser.showDialog(this, "Choose bar color",
                renderer.getBarColor()));
        setButtonColor(renderer.getBarColor());
        fireOptionsChanged();
    }


    // Variables declaration - do not modify
    private javax.swing.JButton jbChooseColor;
    private javax.swing.JCheckBox jcbShowBar;
    private javax.swing.JCheckBox jcbShowValue;
    // End of variables declaration

}
