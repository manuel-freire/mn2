/*
 *  This file is part of ManyNets.
 *
 *  ManyNets is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as 
 *  published by the Free Software Foundation, either version 3 of the 
 *  License, or (at your option) any later version.
 *
 *  ManyNets is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with ManyNets.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  ManyNets was created at the Human Computer Interaction Lab, 
 *  University of Maryland at College Park. See the README file for details
 */

package edu.umd.cs.hcil.manynets.ui;

/**
 *
 * @author Manuel Freire
 */
public class PythonFilterDialog extends javax.swing.JDialog {

    private boolean wasCancelled = true;
    private PythonPanel pyPanels[];
    private TablePanel stp;
    private String initialColumnName; // also used to trigger per-panel column names

    /** Creates new form PythonFilterDialog */
    public PythonFilterDialog(java.awt.Frame parent, TablePanel stp,
            int n, boolean showExpNumber, boolean showColumnName, String columnName) {
        super(parent, true);
        initComponents();

        this.initialColumnName = columnName;
        this.stp = stp;

        initFilters(n);
        jtfColumnName.setText(columnName);
        if ( ! showExpNumber) {
            jpTop.remove(jpExpressionCount);
            jpTop.validate();
        }
        if ( ! showColumnName) {
            jpTop.remove(jpColumnName);
            jpTop.validate();            
        }
    }

    public void initFilters(int n) {
        PythonPanel oldPanels[] = pyPanels;
        jpFilters.removeAll();
        pyPanels = new PythonPanel[n];
        for (int i=0; i<pyPanels.length; i++) {
            pyPanels[i] = new PythonPanel(
                stp.getBaseWrapper().getTable(), initialColumnName);
            if (oldPanels != null && oldPanels.length > i) {
                pyPanels[i].setFilter(oldPanels[i]);
            }
            jpFilters.add(pyPanels[i]);
        }
        jpFilters.validate();

        jcbExpressionCount.setSelectedItem("" + n);
    }

    public boolean wasCancelled() {
        return wasCancelled;
    }

    public String getColumnName(int n) {
        return pyPanels[n].getColName();
    }

    public String getColumnName() {
        return jtfColumnName.getText();
    }

    public String getText(int n) {
        return pyPanels[n].getText();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jbApply = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();
        jpTop = new javax.swing.JPanel();
        jpColumnName = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtfColumnName = new javax.swing.JTextField();
        jpExpressionCount = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jcbExpressionCount = new javax.swing.JComboBox();
        jpFilters = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jbApply.setText("Apply");
        jbApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbApplyActionPerformed(evt);
            }
        });
        jPanel1.add(jbApply, new java.awt.GridBagConstraints());

        jbCancel.setText("Cancel");
        jbCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelActionPerformed(evt);
            }
        });
        jPanel1.add(jbCancel, new java.awt.GridBagConstraints());

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        jpTop.setLayout(new java.awt.GridBagLayout());

        jpColumnName.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Column Name");
        jpColumnName.add(jLabel2, new java.awt.GridBagConstraints());

        jtfColumnName.setText("Added on 10:30");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 9);
        jpColumnName.add(jtfColumnName, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jpTop.add(jpColumnName, gridBagConstraints);

        jLabel1.setText("Number of expressions:");
        jpExpressionCount.add(jLabel1);

        jcbExpressionCount.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        jcbExpressionCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbExpressionCountActionPerformed(evt);
            }
        });
        jpExpressionCount.add(jcbExpressionCount);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jpTop.add(jpExpressionCount, gridBagConstraints);

        getContentPane().add(jpTop, java.awt.BorderLayout.PAGE_START);

        jpFilters.setLayout(new javax.swing.BoxLayout(jpFilters, javax.swing.BoxLayout.PAGE_AXIS));
        getContentPane().add(jpFilters, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbApplyActionPerformed
        wasCancelled = false;
        dispose();
    }//GEN-LAST:event_jbApplyActionPerformed

    private void jbCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelActionPerformed
        dispose();
    }//GEN-LAST:event_jbCancelActionPerformed

    private void jcbExpressionCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbExpressionCountActionPerformed
        if (jcbExpressionCount.getSelectedItem().equals("" + pyPanels.length)) {
            return;
        } else {
            initFilters(Integer.parseInt("" + jcbExpressionCount.getSelectedItem()));
        }
    }//GEN-LAST:event_jcbExpressionCountActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbApply;
    private javax.swing.JButton jbCancel;
    private javax.swing.JComboBox jcbExpressionCount;
    private javax.swing.JPanel jpColumnName;
    private javax.swing.JPanel jpExpressionCount;
    private javax.swing.JPanel jpFilters;
    private javax.swing.JPanel jpTop;
    private javax.swing.JTextField jtfColumnName;
    // End of variables declaration//GEN-END:variables

}
